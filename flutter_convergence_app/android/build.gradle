buildscript {
     // 如果需要的话，从https://jcenter.bintray.com/下载code reposities。
    // ext.kotlin_version = '1.3.50' flutterSDK2.8.0   ext.kotlin_version = '1.6.10'  flutterSDK2.10.3
    ext.kotlin_version = '1.6.10' 
    repositories {
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/jcenter' }
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/google' }
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/gradle-plugin' }
        mavenCentral()
        google()
    }

    /* 
    * @定义classpath，gradle会从“repositories”中下载对应版本的Gradle。
    * 如果使用gradle wrapper的话，感觉这个配置会被忽略。Wrapper会自己去下载所使用的gradle版本
    */
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

/* 该配置会被应用到所有的子工程 */
allprojects {
    repositories {
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/jcenter' }
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/google' }
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/gradle-plugin' }
        mavenCentral()
        google()
    }
}

rootProject.buildDir = '../build'
subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
}
subprojects {
    project.evaluationDependsOn(':app')
}

/* 
 * @clean  该任务继承自Delete,删除根目录中的build目录 
 * 运行gradle clean时,执行此处定义的task
 */
task clean(type: Delete) {
    delete rootProject.buildDir
}
